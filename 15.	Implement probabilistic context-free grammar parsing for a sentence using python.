#Question no 15

!pip install nltk

import nltk
from nltk import PCFG

# Define the probabilistic context-free grammar
pcfg = PCFG.fromstring("""
    S -> NP VP [1.0]
    VP -> V NP [0.6] | V NP PP [0.4]
    PP -> P NP [1.0]
    V -> "saw" [0.5] | "ate" [0.3] | "walked" [0.2]
    NP -> "John" [0.2] | "Mary" [0.2] | "Bob" [0.2] | Det N [0.2] | Det N PP [0.2]
    Det -> "a" [0.5] | "an" [0.25] | "the" [0.25]
    N -> "man" [0.3] | "dog" [0.2] | "cat" [0.2] | "telescope" [0.15] | "park" [0.15]
    P -> "in" [0.4] | "on" [0.3] | "by" [0.2] | "with" [0.1]
""")

# Define the sentence to be parsed
sentence = "John saw the man in the park".split()

# Create a Viterbi parser using the PCFG
viterbi_parser = nltk.ViterbiParser(pcfg)

# Parse the sentence and print the most likely parse tree
for tree in viterbi_parser.parse(sentence):
    print(tree)
    tree.pretty_print()
    tree.draw()

